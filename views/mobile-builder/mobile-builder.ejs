<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="utf-8">
    <script src="/blockly/blockly_compressed.js"></script>
    <script src="/blockly/blocks_compressed.js"></script>
    <script src="/blockly/javascript_compressed.js"></script>
    <script src="/blockly/msg/js/en.js"></script>
    <script src="/blockly/custom-blocks.js"></script>
    <script src="/scripts/builder.js"></script>
    <script src="/scripts/html2canvas.js"></script>
    <link rel="stylesheet" href="/scripts/highlight/styles/atom-one-light.css">
    <script src="/scripts/highlight/highlight.pack.js"></script>
    <script>hljs.initHighlightingOnLoad();</script>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css" integrity="sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS" crossorigin="anonymous">

		<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/interactjs@1.3/dist/interact.min.js"></script>

    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <link rel="stylesheet" href="https://code.getmdl.io/1.3.0/material.indigo-pink.min.css">
    <script defer src="https://code.getmdl.io/1.3.0/material.min.js"></script>

    <link rel="stylesheet" href="/style/mobile-builder.css">
    <title></title>
  </head>
  <body>

<!-- hidden canvas to save print screen -->
<div id="hiddenCanvas" hidden></div>

<h6>Mobile Builder Test</h6>

<!-- Main NavBar -->
<div class="mainNav">
  <ul class="mainMenu">
    <li><a href="/profile/<%= foundUser._id%>"><img src="/images/icons/nav roxa - 1 inicio inativo.svg" alt="nav branca - 1 inicio.svg">Início</a></li>
    <li><a href="/lessons/<%= foundUser._id%>"><img src="/images/icons/nav roxa - 2 trilha inativo.svg" alt="nav branca - 2 trilha.svg">Trilha</a></li>
    <li><a class="mainActive" href="/builder"><img src="/images/icons/nav roxa - 3 construtor ativo.svg" alt="nav branca - nav branca - 3 construtor.svg">Construtor</a></li>
    <li><a href="/projects/<%= foundUser._id %>"><img src="/images/icons/nav roxa - 4 projetos inativo.svg" alt="nav branca - 4 projetos.svg">Projetos</a></li>
    <div class="mainRight">
      <li><%= foundUser.firstName%> <%= foundUser.lastName %> | <%= foundUser.score.xp%> Pontos</li>
      <li>
        <img id="imgProfile" src="/images/profile_default.png" alt="profile_default.png">
        <button id="dropBtn" type="button" name="button">
          <img id="dropBtnIcon" src="/images/icons/expande perfil.svg" alt="expande perfil.svg">
        </button>
        <div class="dropdownContent">
          <a href="/user/profile">Profile</a>
          <hr>
          <a href="/auth/logout">Logout</a>
        </div>
      </li>
    </div>
  </ul>
</div>
<div class="row">
  <div class="leftContainer">
    <div class="builderNav">
      <ul class="builderNavMenu">
        <li><a class="btnBuilderNav" id="blocklyBtn" href="#">Blockly</a></li>
        <li><a class="btnBuilderNav" id="jsBtn" href="#">JavaScript</a></li>
        <li><a class="btnBuilderNav" id="designBtn" href="#">Design</a></li>
      </ul>
    </div>
    <div id="blocklyArea">
      <div id="blocklyDiv"></div>
    </div>

    <div id="jsArea">
        <pre><code class="javascript">
          <div id="jsCode"></div>
        </code></pre>
    </div>

    <div id="designArea">
      <div class="sessionTitle">
        <h3>Botões</h3>
        <div class="sessionTitleSubline"></div>
      </div>
      <div class="designCathegory">
        <button id="regularButton" draggable="True" ondragstart="drag(event)" type="button" name="button">Botão de Teste</button><br>
        <!-- Accent-colored raised button with ripple -->
        <button class="mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-button--colored" id="colorRoundButton" draggable="True" ondragstart="drag(event)"><i class="material-icons">add</i></button>
        <button class="mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab"><i class="material-icons">add</i></button><br>
        <button class="mdl-button mdl-js-button mdl-button--raised mdl-button--colored">Button</button>
        <button class="mdl-button mdl-js-button mdl-button--raised mdl-button--accent">Button</button>
        <button class="mdl-button mdl-js-button mdl-button--raised">Button</button>
        <button class="mdl-button mdl-js-button mdl-button--raised" disabled>Button</button><br>
        <button class="mdl-button mdl-js-button mdl-button--primary">Button</button>
        <button class="mdl-button mdl-js-button mdl-button--accent">Button</button>
        <button class="mdl-button mdl-js-button">Button</button>
        <button class="mdl-button mdl-js-button" disabled>Button</button><br>
      </div>
      <div class="sessionTitle">
        <h3>Toggles</h3>
        <div class="sessionTitleSubline"></div>
      </div>
      <div class="designCathegory">
        <label class="mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect" for="checkbox-1">
          <input type="checkbox" id="checkbox-1" class="mdl-checkbox__input" checked>
          <span class="mdl-checkbox__label">Checkbox</span>
        </label><!-- Check On-->
        <label class="mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect" for="checkbox-2">
          <input type="checkbox" id="checkbox-2" class="mdl-checkbox__input">
          <span class="mdl-checkbox__label">Checkbox</span>
        </label><!-- Check Off-->
        <label class="mdl-radio mdl-js-radio mdl-js-ripple-effect" for="option-1">
          <input type="radio" id="option-1" class="mdl-radio__button" name="options" value="1" checked>
          <span class="mdl-radio__label">First</span>
        </label>
        <label class="mdl-radio mdl-js-radio mdl-js-ripple-effect" for="option-2">
          <input type="radio" id="option-2" class="mdl-radio__button" name="options" value="2">
          <span class="mdl-radio__label">Second</span>
        </label>
        <label class="mdl-switch mdl-js-switch mdl-js-ripple-effect" for="switch-1">
          <input type="checkbox" id="switch-1" class="mdl-switch__input" checked>
          <span class="mdl-switch__label"></span>
        </label>
        <label class="mdl-switch mdl-js-switch mdl-js-ripple-effect" for="switch-2">
          <input type="checkbox" id="switch-2" class="mdl-switch__input">
          <span class="mdl-switch__label"></span>
        </label>
      </div>
      <div class="sessionTitle">
        <h3>Cards</h3>
        <div class="sessionTitleSubline"></div>
      </div>
      <div class="designCathegory">
        <div class="demo-card-wide mdl-card mdl-shadow--2dp" id="whiteCard" draggable="True" ondragstart="drag(event)"></div>
      </div>



    </div> <!-- closing designArea -->

  </div> <!--Left Container -->
  <div class="rightContainerMainDiv">
    <div class="phoneContainer">
      <img src="/images/celular_mockup.png" alt="phone image">
      <div class="rightContainer" ondrop="drop(event)" ondragover="allowDrop(event)">

      </div>
    </div>
      <div class="bottomButtons">
        <div class="rightBtnContainer">
          <img src="" alt="">
          <button id= "btnRun"type="button" onclick="runCode()" name="button"> <img id="playIcon" src="/images/icons/const - botao play.svg" alt="const - botao play.svg"> </button>
          <button id= "btnFullScreen"type="button" onclick="fullScreen()" name="button"><img id="fullScreenIcon" src="/images/icons/const - botao tela maior.svg" alt=""></button>
        </div>
        <div class="centerBtnContainer">
          <button id= "btnSave"type="button" name="button" data-toggle="modal" data-target="#myModal" onclick="saveProject()">Salvar</button>
          <button id= "btnPublish"type="button" name="button">Publicar</button>
          <button type="button" name="button" onclick="takePicture()">Take a Picture</button>
        </div>
      </div>
    <!-- </div> -->
  </div>
</div>




<!-- NavBar do Menu Blockly -->
<!-- Blockly toolbox and workspace -->


    <xml id="toolbox" style="display: none">
      <category name="Eventos" colour="65">
        <block type="on_up_click"></block>
        <block type="on_down_click"></block>
        <block type="on_left_click"></block>
        <block type="on_right_click"></block>
        <block type="detect_colision"></block>
        <block type="on_button_click"></block>
      </category>
      <category name="Movimento" colour="120">
        <block type="move_astronaut_up"></block>
        <block type="move_astronaut_down"></block>
        <block type="move_astronaut_left"></block>
        <block type="move_astronaut_right"></block>
      </category>
        <category name="Loops" colour="%{BKY_LOOPS_HUE}">
          <block type="controls_repeat_ext">
            <value name="TIMES">
              <block type="math_number">
                <field name="NUM">10</field>
              </block>
            </value>
          </block>
          <block type="controls_whileUntil"></block>
        </category>
        <category name="Lógica" colour="%{BKY_LOGIC_HUE}">
          <block type="controls_if"></block>
          <block type="logic_compare"></block>
          <block type="logic_operation"></block>
          <block type="logic_negate"></block>
          <block type="logic_boolean"></block>
        </category>
        <category name="Matemática" colour="%{BKY_MATH_HUE}">
          <block type="math_number">
            <field name="NUM">123</field>
          </block>
          <block type="math_arithmetic"></block>
          <block type="math_single"></block>
        </category>
        <category name="Log" colour="330">
          <block type="console_log"></block>
        </category>
    </xml>
</div>


<!-- The Modal -->
<div class="modal" id="myModal">
  <div class="modal-dialog">
    <div class="modal-content">
      <form action="/projects/new" method="POST">
      <!-- Modal Header -->
      <div class="modal-header">
        <h2 class="modal-title">Salvar Projeto</h2>
        <button type="button" class="close" data-dismiss="modal">&times;</button>
      </div>


        <!-- Modal body -->
        <div class="modal-body">
          <p>Adicione um nome para o seu projeto:</p>
          <input type="text" name="name" value="Untitled">
          <!-- <input id="prjInput" type="hidden" name="prj"> -->
          <input id="playgroundInput" type="hidden" name="playground">
        </div>

        <!-- Modal footer -->
        <div class="modal-footer">
          <button type="submit" class="btn btn-primary">Salvar</button>
          <button type="button" class="btn btn-danger" data-dismiss="modal">Fechar</button>
        </div>
      </form>
    </div>
  </div>
</div>



<!-- var project = {author: `<%= foundUser._id%>`, name: '', xml: '', txt: '', playground: appendedAssets} -->



<!-- BLockly workspace script -->
    <script>
      var blocklyArea = document.getElementById('blocklyArea');
      var blocklyDiv = document.getElementById('blocklyDiv');
      var workspace = Blockly.inject(blocklyDiv,
        {toolbox: document.getElementById('toolbox')});
      var onresize = function(e) {
    // Compute the absolute coordinates and dimensions of blocklyArea.
        var element = blocklyArea;
        var x = 0;
        var y = 0;
        do {
          x += element.offsetLeft;
          y += element.offsetTop;
          element = element.offsetParent;
        } while (element);
      // Position blocklyDiv over blocklyArea.
        blocklyDiv.style.left = x + 'px';
        blocklyDiv.style.top = y + 'px';
        blocklyDiv.style.width = blocklyArea.offsetWidth + 'px';
        blocklyDiv.style.height = blocklyArea.offsetHeight + 'px';
        Blockly.svgResize(workspace);
      };
      window.addEventListener('resize', onresize, false);
      onresize();
      Blockly.svgResize(workspace);

    </script>



  <script>

//======================= JAVASCRIPT TAB CODE  ======================================


  $('#jsBtn').on('click', function (e) {
    e.preventDefault()
    console.log('JavaScript Tab was clicked');
    // Generate JavaScript code and display it.
    Blockly.JavaScript.INFINITE_LOOP_TRAP = null;
    Blockly.JavaScript.addReservedWords('code');
    var code = Blockly.JavaScript.workspaceToCode(workspace);
    // alert(code);
    $('#jsCode').html(`${code}`)
  })


//======================= DROPDOWN MENU HIDE/SHOW LPOGIC =============================


  $('#dropBtn').click(function(){
    $('.dropdownContent').addClass('show')
  })

  $(window).click(function(e) {
    if(e.target.id != ('dropBtn' || 'dropBtnIcon')) {
      $('.dropdownContent').removeClass('show')
    }else{
    }
  })

//=========== BUILDER NAVBAR (BLOCKLY/ JS / DESIGN ) HIDE AND SHOW LOGIC ============

  $('#jsArea').hide();
  $('#designArea').hide();

  $('#blocklyBtn').click(function(){
    $('#blocklyArea').show();
    $('#jsArea').hide();
    $('#designArea').hide();
  })

  $('#jsBtn').click(function(){
    $('#blocklyArea').hide();
    $('#jsArea').show();
    $('#designArea').hide();
  })

  $('#designBtn').click(function(){
    $('#blocklyArea').hide();
    $('#jsArea').hide();
    $('#designArea').show();
  })


//======================= FULL SCREEN FUNCTION =============================
  var fullScreenState = false;
  var rowContainer = document.getElementsByClassName('row');
  var leftContainer =   document.getElementsByClassName('leftContainer');
  var rightContainer = document.getElementsByClassName('rightContainer');
  var fullScreenIcon = document.getElementById('fullScreenIcon');

  function fullScreen() {
    console.log("Full Screen Clicked!");

    if(fullScreenState === false) {
      leftContainer[0].hidden = true;
      rowContainer[0].style.width = "1024px"
      rightContainer[0].style.width = "100%"
      fullScreenIcon.src = '/images/icons/const - botao tela menor.svg'

      fullScreenState = true;

    } else if (fullScreenState === true) {
      leftContainer[0].hidden = false;
      rightContainer[0].style.width = "50%"

      fullScreenIcon.src = '/images/icons/const - botao tela maior.svg'

      fullScreenState = false;
    }
  }

//=======================DRAG AND DROP FUNCTIONS ==================================


//-------- Array of Assets Objects


const assetsArray = [
  {ref: 'regularButton', id:'cvsRegularButton', class: 'draggableAsset', cathegory: 'button', html: `<button id="cvsRegularButton" class= "draggableAsset" type="button" name="button">Botão de Teste</button>`},
  {ref: 'colorRoundButton', id:'cvsRegularButton', class: 'draggableAsset', cathegory: 'button', html: `<button class="mdl-button mdl-js-button mdl-button--fab mdl-button--mini-fab mdl-button--colored draggableAsset" id="cvsColorRoundButton"><i class="material-icons">add</i></button>`},
  {ref: 'whiteCard', id: 'cvsWhiteCard', class: 'draggableAsset', cathegory: 'card', html: '<div class="demo-card-wide mdl-card mdl-shadow--2dp draggableAsset" id="cvsWhiteCard"></div>'}
]

const appendedAssets = [];


  function drag(e) {
    e.dataTransfer.setData('asset', e.target.id)
  }

  function drop(e) {
    console.log(e, 'this is the Event Object');
    e.preventDefault();
    var posX = e.layerX;
    var posY = e.layerY;
    console.log('posX == ', posX);
    console.log('posY == ', posY);
    var data = e.dataTransfer.getData('asset')
    var assetHtml = getHtml(data, posX, posY);
    console.log(assetHtml, 'this is asset Html');
    addItems(assetHtml);
    appendedAssets.push(assetHtml);
    console.log(appendedAssets[0], 'All Assets');
  }

  var addItems = function(html) {
    var $html = $(html);
    $('.rightContainer').append($html)
  }





  //-------- Identifies the droped Object and finds and returns the respective Html Code.

  function getHtml(data, posX, posY){
    console.log(data, 'This is passed data');
    console.log('getHtml called');
    for (var i = 0; i < assetsArray.length; i++) {
      console.log(assetsArray[i].ref, 'assetsArray[i] id');
      if(assetsArray[i].ref === data){
        if(assetsArray[i].cathegory === 'background'){
          var newHtml = assetsArray[i].html
        }else{
          var foundAsset = assetsArray[i];
          // var newHtml = `${foundAssetHtml}style="position:absolute; top:${posX}px; right:${posY}px">`
          var newHtml = foundAsset.html
        }
      }
    }
    return newHtml;
  }

  function allowDrop(e) {
    e.preventDefault();
  }


//=======================SAVE PROJECT FUNCTIONS ======================================
  var project = {author: `<%= foundUser._id%>`, name: 'Untitled', xml: '', txt: '', playground: [], image: ''}
  // var project = {};
  function saveProject() {
    console.log('Save Project clicked');

    //rendering canvas into dataURL
    html2canvas(document.getElementsByClassName('rightContainer')[0])
      .then(function(canvas) {
        document.getElementById('hiddenCanvas').appendChild(canvas);
        console.log(canvas);
        var dataURL = canvas.toDataURL('image/png', 0.1);
        console.log(dataURL, 'dataURL');
        project.image = dataURL

        //saving blockly
        project.xml = Blockly.Xml.workspaceToDom(workspace);
        project.txt = Blockly.Xml.domToText(project.xml);


        //saving playground
        rightContainerChildNodes = document.getElementsByClassName('rightContainer')[0].childNodes;
        for (var i = 0; i < rightContainerChildNodes.length; i++) {
          console.log(rightContainerChildNodes[i].outerHTML, `LOOP #${i}`);
          if (i > 8) {
            project.playground.push(rightContainerChildNodes[i].outerHTML);
          }
        }

        console.log(document.getElementById('cvsToPrint'), "cvs to Print");


        var projectToSave = JSON.stringify(project);
        var projectToLoad = JSON.parse(projectToSave);

        document.getElementById('playgroundInput').value = projectToSave;
      });



  } // ------------------- End of Save Project













  //=======================DRAGABLE INTERACT ==================================

  //JSInteraction Functions
  interact('.draggableAsset')
    .draggable({
      // enable inertial throwing
      inertia: false,
      // keep the element within the area of it's parent
      restrict: {
        restriction: "parent",
        endOnly: true,
        elementRect: { top: 0, left: 0, bottom: 1, right: 1 }
      },
      // enable autoScroll
      autoScroll: true,

      // call this function on every dragmove event
      onmove: dragMoveListener,
      // call this function on every dragend event
      onend: function (event) {
        var textEl = event.target.querySelector('p');

        textEl && (textEl.textContent =
          'moved a distance of '
          + (Math.sqrt(Math.pow(event.pageX - event.x0, 2) +
                       Math.pow(event.pageY - event.y0, 2) | 0))
              .toFixed(2) + 'px');
      }
    });

    function dragMoveListener (event) {
      var target = event.target,
          // keep the dragged position in the data-x/data-y attributes
          x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx,
          y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;

      // translate the element
      target.style.webkitTransform =
      target.style.transform =
        'translate(' + x + 'px, ' + y + 'px)';

      // update the posiion attributes
      target.setAttribute('data-x', x);
      target.setAttribute('data-y', y);

      var targetString = target.toString();
      console.log(targetString, "target String!");

      console.log(x, 'Drag Move X!');
      console.log(target, 'TARGET dot ID');
      console.log(appendedAssets[1], "appendedAssets on interact");

    }

    // console.log(document.getElementById('#cvsRedDuck').currentX);

    // this is used later in the resizing and gesture demos
    // window.dragMoveListener = dragMoveListener;




//=======================BLOCOS ==================================


//-----------------TESTE COM MOVIMENTO



//BLockly FUNCTIONS

const astronaut = {
  moveRight: function() {
      console.log('moveRight function called!');
      var target = document.getElementById('cvsChar01'),
      x = (parseFloat(target.getAttribute('data-x') || 0) + 50),
      y = parseFloat(target.getAttribute('data-y') || 0);

      target.src = '/images/builder-assets/characters/gifs/Charac_S-S01-Walk.gif'

      target.style.webkitTransform =
      target.style.transform =
        'translate(' + x + 'px, ' + y + 'px)';
      target.style.transition = '1s'

      document.getElementById('cvsChar01').setAttribute('data-x', x)
      document.getElementById('cvsChar01').setAttribute('data-y', y)

      setTimeout(function(){
        target.src = '/images/builder-assets/characters/Charac_F-S01-Idle_0.png'
      }, 1000)
  },

  moveLeft: function() {
      console.log('moveLeft function called!');
      var target = document.getElementById('cvsChar01'),
      x = (parseFloat(target.getAttribute('data-x') || 0) - 50),
      y = parseFloat(target.getAttribute('data-y') || 0);


      target.style.webkitTransform =
      target.style.transform =
        'translate(' + x + 'px, ' + y + 'px)';

      document.getElementById('cvsChar01').setAttribute('data-x', x)
      document.getElementById('cvsChar01').setAttribute('data-y', y)
  },

  moveUp: function() {
      console.log('moveUp function called!');
      var target = document.getElementById('cvsChar01'),
      x = parseFloat(target.getAttribute('data-x') || 0),
      y = (parseFloat(target.getAttribute('data-y') || 0) - 50);

      target.style.webkitTransform =
      target.style.transform =
        'translate(' + x + 'px, ' + y + 'px)';

      document.getElementById('cvsChar01').setAttribute('data-x', x)
      document.getElementById('cvsChar01').setAttribute('data-y', y)
  },

  moveDown: function() {
      console.log('moveDown function called!');
      var target = document.getElementById('cvsChar01'),
      x = parseFloat(target.getAttribute('data-x') || 0),
      y = (parseFloat(target.getAttribute('data-y') || 0) + 50);

      target.style.webkitTransform =
      target.style.transform =
        'translate(' + x + 'px, ' + y + 'px)';

      document.getElementById('cvsChar01').setAttribute('data-x', x)
      document.getElementById('cvsChar01').setAttribute('data-y', y)
  },
}



var collisionDetection = function(name1, name2){

  console.log(name1, "this is Name1");

  console.log(name2, "This is name 2");
  var obj1 = document.getElementById(`${name1}`);
  var obj2 = document.getElementById(`${name2}`);


  console.log(obj1, 'This is OBJ 1');
  console.log(obj2, 'This is OBJ 2');

  var colideBox1 = {
    x: (parseInt(obj1.getAttribute('data-x') || 0) + parseInt(obj1.style.left.replace("px", ""))),
    y: (parseInt(obj1.getAttribute('data-y') || 0) + parseInt(obj1.style.top.replace("px", ""))),
    width: obj1.width,
    height: obj1.height,
  }

  var colideBox2 = {
    x: (parseInt(obj2.getAttribute('data-x') || 0) + parseInt(obj2.style.left.replace("px", ""))),
    y: (parseInt(obj2.getAttribute('data-y') || 0) + parseInt(obj2.style.top.replace("px", ""))),
    width: obj2.width,
    height: obj2.height,
  }

  if (colideBox1.x < colideBox2.x + colideBox2.width &&
   colideBox1.x + colideBox1.width > colideBox2.x &&
   colideBox1.y < colideBox2.y + colideBox2.height &&
   colideBox1.y + colideBox1.height > colideBox2.y) {
    // collision detected!
  return true;
}

  console.log(colideBox1, "colideBox1");
  console.log(colideBox2, "colideBox2");

}

var pular = function() {

  var target = document.getElementById('cvsChar01');
  console.log(target, "vamos pular Target");

  x = parseFloat(target.getAttribute('data-x') || 0)
  y = parseFloat(target.getAttribute('data-y') || 0)

  target.src = '/images/builder-assets/characters/gifs/Charac_S-S01-Jump-2.gif'
  console.log(target.style.height, 'TARGET STYLE HEIGHT');


  setTimeout(function(){
    target.src = '/images/builder-assets/characters/Charac_F-S01-Idle_0.png'
    }, 700)
}



</script>





<!-- Bootstrap Scripts  -->
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.6/umd/popper.min.js" integrity="sha384-wHAiFfRlMFy6i5SRaxvfOCifBUQy1xHdJ/yoi7FRNXMRBu5WHdZYu1hA6ZOblgut" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/js/bootstrap.min.js" integrity="sha384-B0UglyR+jN6CkvvICOB2joaf5I4l3gm9GU6Hc1og6Ls7i6U/mkkaduKaBhlAXv9k" crossorigin="anonymous"></script>
  </body>
</html>
